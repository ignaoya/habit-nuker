# Python Django
# Test a Django project on multiple versions of Python.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
    Python310:
      PYTHON_VERSION: '3.10'
  maxParallel: 3

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(PYTHON_VERSION)'
    architecture: 'x64'

- task: PythonScript@0
  displayName: 'Export project path'
  inputs:
    scriptSource: 'inline'
    script: |
      """Search all subdirectories for `manage.py`."""
      from glob import iglob
      from os import path
      # Python >= 3.5
      manage_py = next(iglob(path.join('**', 'manage.py'), recursive=True), None)
      if not manage_py:
          raise SystemExit('Could not find a Django project')
      project_location = path.dirname(path.abspath(manage_py))
      print('Found Django project in', project_location)
      print('##vso[task.setvariable variable=projectRoot]{}'.format(project_location))

- script: |
    python -m pip install --upgrade pip setuptools wheel
    python -m pip install pipenv
    python -m pipenv install
  displayName: 'Install prerequisites'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip'
    replaceExistingArchive: true
- publish: $(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip
  displayName: 'Upload package'
  artifact: drop

- task: AzureWebApp@1
  displayName: 'Deploy Azure Web App : habit-nuker-django'
  inputs:
    azureSubscription: 'Azure subscription 1(44ca54b6-ec71-4366-a0e2-63e08d0b10d6)'
    appType: 'webAppLinux'
    appName: 'habit-nuker-django'
    package: $(Pipeline.Workspace)/drop/Application$(Build.BuildId).zip
    deploymentMethod: zipDeploy

    # The following parameter is specific to the Flask example code. You may
    # or may not need a startup command for your app.

    startUpCommand: 'gunicorn --bind=0.0.0.0 --workers=4 startup:app'
